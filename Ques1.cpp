/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <cmath>
#include <algorithm>
using namespace std;

int fibo(int n)
{
    return (int)round((double)pow((double)(1 + sqrt(5)) / 2, n) / (double)sqrt(5));
}

int main()
{
    int sum = 0;
    int i = 3;
    while (1)
    {
        if (fibo(i) > 4000000)
        {
            break;
        }
        sum += fibo(i);
        i += 3;
    }

    cout << sum << endl;
    return 0;
}

//Answer is 4613732